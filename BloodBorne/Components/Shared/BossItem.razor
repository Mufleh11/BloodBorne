@inject ListItem ListItem
@using BloodBorne.Context
@using BloodBorne.Model
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.EntityFrameworkCore
@inject DatabaseContext DbContext
@inject ProtectedSessionStorage ProtectedSessionStorage
@inject NavigationManager NavigationManager


<div class="card h-100">
    <img src="/img/bosses/@Bosses.ImageUrl" class="card-img-top p-1" alt="@Bosses.Name" onerror="this.onerror = null; this.src='/img/bosses/noboss.png'">
    <div class="card-body d-flex flex-column">
        <h4>@Bosses.Name</h4>
        <div class="card-body d-flex flex-column">
            <p class="card-text">@Bosses.BossDescription</p>
            
        </div>

        <EditForm Model= "quantity" OnSubmit="AddToList"> 
            <button class="btn btn-outline-primary" for="btn-check-outlined">Add</button>

        </EditForm>

          @* <EditForm Model="quantity" OnSubmit="ShowInfo"> *@
              
                 @* <button class="btn btn-primary" @onclick="() => ShowInfo(context)">Info</button> *@

        <a @onclick="GoToComment" button type="button" style="margin-right: 10px;" class="btn btn-primary btn-md w-50 ">BossInfo</a>
        <style>
        

           

            .align-right {
                text-align: right;
                border: 0;
       </style>
            <div class="align-right">
            <a @onclick="ShowInfo" button type="button" style="margin-right: 10px;" class="btn btn-primary btn-md w-50 ">BossInfo</a>
            </div>
    </div>
</div>



@code {
    [Parameter]
    public Bosses Bosses { get; set; }
   

    // private async Task GetBosses()
    // {
    //     Bosses = (await DbContext.Bosses.ToListAsync()).AsQueryable();
    //     model = new Bosses();
    //     editContext = new EditContext(model);
    // }

    // protected override async Task OnInitializedAsync()
    // {
    //     await GetBosses();
    // }

    private int quantity = 1;

    public async Task AddToList()
    {
        ListItem.AddItem(Bosses);
        await ProtectedSessionStorage.SetAsync("List", ListItem.GetItems());
        
    }
   
    //  private void ShowInfo(Bosses bosses)
    // {
    //     NavigationManager.NavigateTo($"/Info/{bosses.Id}");
       
    // }

    private void ShowInfo()
    {
        NavigationManager.NavigateTo($"/Info/{Bosses.Id}");

    }

    private void GoToComment()
    {
        NavigationManager.NavigateTo($"/Comment/{Bosses.Id}");

    }
}
 